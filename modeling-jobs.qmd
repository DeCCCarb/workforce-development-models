---
title: "Modeling Jobs"
format: html
warning: false
message: false
---

```{r}
library(tidyverse)
```


# Objective:

End goal is to have one data frame that looks something like this:

| county  | year | technology | new_capacity | total_capacity | occupation   | type    | n_jobs | ambition 
|---------|------|------------|--------------|----------------|--------------|---------|--------|
|   SLO   | 2026 | Utility PV | 1            | 1              | construction |direct   | 5      | high
| ...     | ...  |  ...       | ...          | ...            | ...          |  ...    | ...    | low 
| Ventura | 2026 | OSW        | 1            | 1              | op and maint |indirect | 100    |

etc.

I imagine this coming together (concat) from many different dataframes: one for each county and technology

# PV model

Start with 1 piece and see if we can build this into a function from there

## Santa Barbara Utility Solar

Values from Eleanor's Tech. Scenarios sheet:

- Ambition: 722 MW by 2045
- Starting: 111 MW in 2025

First, use compounding interest to calculate yearly capacities:

```{r}
# Initial values
initial_capacity <- 111
final_capacity <- 722
years <- 20

# Calculate the annual growth rate
growth_rate <- (final_capacity / initial_capacity)^(1 / years) - 1

# Create variables to store the results
year <- 2025:2045
capacity <- numeric(length(year))
new_capacity <- numeric(length(year))

# Calculate the total capacity for each year
for (i in 1:length(year)) {
  capacity[i] <- initial_capacity * (1 + growth_rate)^(year[i] - 2025)
  if (i == 1) {
      new_capacity[i] <- capacity[i] - initial_capacity
  } else {
      new_capacity[i] <- capacity[i] - capacity[i-1]
  }
}

# Create a data frame with the results
sb_utility_pv <- data.frame(county = "SB", 
                             year = year, 
                             technology = "utility solar",
                             new_capacity = new_capacity,
                             total_capacity = round(capacity, 2))

# Display the table
print(sb_utility_pv)
```

Now we just need to add number of jobs! Let's just say for testing purposes that utility solar requires:
- 5 FTE construction jobs / MW
- construction project lasts 3 months
- 10 annual O&M jobs / MW
- lifetime of project is 30 years (beyond the scope of our model)  


Starting with O&M jobs:
```{r}
# O&M direct jobs ---- 
# Assign variables
om_direct <- 10

# Add columns occupation, type, and n_jobs
sb_utility_pv_om_direct <- sb_utility_pv |>
    mutate(occupation = "O&M",
           type = "direct",
           n_jobs = total_capacity * om_direct)

# O&M indirect jobs ---- 
# Assign variables
om_indirect <- 5

# Add columns occupation, type, and n_jobs
sb_utility_pv_om_indirect <- sb_utility_pv |>
    mutate(occupation = "O&M",
           type = "indirect",
           n_jobs = total_capacity * om_indirect)

# O&M induced ----
# Assign variables
om_induced <- 2

# Add columns occupation, type, and n_jobs
sb_utility_pv_om_induced <- sb_utility_pv |>
    mutate(occupation = "O&M",
           type = "induced",
           n_jobs = total_capacity * om_induced)

# Stack 3 together for total SB PV O&M jobs
sb_utility_pv_om <- rbind(sb_utility_pv_om_direct, sb_utility_pv_om_indirect, sb_utility_pv_om_induced)

print(sb_utility_pv_om)

```

Nice. Let's build this into a function, starting with a function for O&M jobs:
```{r}
# Function to calculate capacity and jobs for PV O&M
pv_om_capacity_and_jobs <- function(county, technology, initial_capacity, final_capacity, direct_jobs, indirect_jobs, induced_jobs) {
    
  # Calculate the annual growth rate
  growth_rate <- (final_capacity / initial_capacity)^(1 / years) - 1
  
  # Create variables to store the results
  year <- 2025:2045
  capacity <- numeric(length(year))
  new_capacity <- numeric(length(year))
  
  # Calculate the total capacity for each year
  for (i in 1:length(year)) {
    capacity[i] <- initial_capacity * (1 + growth_rate)^(year[i] - 2025)
    if (i == 1) {
      new_capacity[i] <- capacity[i] - initial_capacity
    } else {
      new_capacity[i] <- capacity[i] - capacity[i-1]
    }
  }
  
  # Create a data frame with the results
  df <- data.frame(county = county, 
                   year = year, 
                   technology = technology,
                   new_capacity = new_capacity,
                   total_capacity = round(capacity, 2))
  
  # Direct jobs
  df_direct <- df %>%
    mutate(occupation = "O&M", 
           type = "direct", 
           n_jobs = total_capacity * direct_jobs)
  
  # Indirect jobs
  df_indirect <- df %>%
    mutate(occupation = "O&M",
           type = "indirect", 
           n_jobs = total_capacity * indirect_jobs)
  
  # Induced jobs
  df_induced <- df %>%
    mutate(occupation = "O&M",
           type = "induced", 
           n_jobs = total_capacity * induced_jobs)
  
  # Stack them together for total jobs
  df_final <- rbind(df_direct, df_indirect, df_induced)
  
  return(df_final)
}

```


And then a function for Construction jobs
```{r}
# Function to calculate capacity and jobs for PV Construction
pv_const_capacity_and_jobs <- function(county, technology, initial_capacity, final_capacity, direct_jobs, indirect_jobs, induced_jobs) {
    
  # Calculate the annual growth rate
  growth_rate <- (final_capacity / initial_capacity)^(1 / years) - 1
  
  # Create variables to store the results
  year <- 2025:2045
  capacity <- numeric(length(year))
  new_capacity <- numeric(length(year))
  
  # Calculate the total capacity for each year
  for (i in 1:length(year)) {
    capacity[i] <- initial_capacity * (1 + growth_rate)^(year[i] - 2025)
    if (i == 1) {
      new_capacity[i] <- capacity[i] - initial_capacity
    } else {
      new_capacity[i] <- capacity[i] - capacity[i-1]
    }
  }
  
  # Create a data frame with the results
  df <- data.frame(county = county, 
                   year = year, 
                   technology = technology,
                   new_capacity = new_capacity,
                   total_capacity = round(capacity, 2))
  
  # Direct jobs
  df_direct <- df %>%
    mutate(occupation = "Construction", 
           type = "direct", 
           n_jobs = new_capacity * direct_jobs)   # Assuming that construction jobs only last the year, #jobs/mw year will multiply by the new capacity
  
  # Indirect jobs
  df_indirect <- df %>%
    mutate(occupation = "Construction",
           type = "indirect", 
           n_jobs = new_capacity * indirect_jobs)
  
  # Induced jobs
  df_induced <- df %>%
    mutate(occupation = "Construction",
           type = "induced", 
           n_jobs = new_capacity * induced_jobs)
  
  # Stack them together for total jobs
  df_final <- rbind(df_direct, df_indirect, df_induced)
  
  return(df_final)
}
```

Let's use the functions for each county and occupation
```{r}
# Utility PV
sb_utility_pv_om <- pv_om_capacity_and_jobs(
  county = "SB", 
  technology = "Utility PV", 
  initial_capacity = 111, 
  final_capacity = 722, 
  direct_jobs = 10, 
  indirect_jobs = 5, 
  induced_jobs = 2
)

sb_utility_pv_const <- pv_const_capacity_and_jobs(
  county = "SB",
  technology = "Utility PV",
  initial_capacity = 111,
  final_capacity = 722,
  direct_jobs = 5,
  indirect_jobs = 3,
  induced_jobs = 1
)

slo_utility_pv_om <- pv_om_capacity_and_jobs(
  county = "SLO", 
  technology = "Utility PV", 
  initial_capacity = 50, 
  final_capacity = 1000, 
  direct_jobs = 10, 
  indirect_jobs = 5, 
  induced_jobs = 2
)

slo_utility_pv_const <- pv_const_capacity_and_jobs(
  county = "SLO",
  technology = "Utility PV",
  initial_capacity = 50,
  final_capacity = 1000,
  direct_jobs = 10,
  indirect_jobs = 5,
  induced_jobs = 2
)

ventura_utility_pv_om <- pv_om_capacity_and_jobs(
  county = "V", 
  technology = "Utility PV", 
  initial_capacity = 400, 
  final_capacity = 900, 
  direct_jobs = 10, 
  indirect_jobs = 5, 
  induced_jobs = 2
)

ventura_utility_pv_const <- pv_const_capacity_and_jobs(
  county = "V",
  technology = "Utility PV",
  initial_capacity = 400,
  final_capacity = 900,
  direct_jobs = 10,
  indirect_jobs = 5,
  induced_jobs = 2
)


# Rooftop PV
sb_roof_pv_om <- pv_om_capacity_and_jobs(
  county = "SB", 
  technology = "Rooftop PV", 
  initial_capacity = 111, 
  final_capacity = 2000, 
  direct_jobs = 10, 
  indirect_jobs = 5, 
  induced_jobs = 2
)

sb_roof_pv_const <- pv_const_capacity_and_jobs(
  county = "SB",
  technology = "Rooftop PV",
  initial_capacity = 111,
  final_capacity = 2000,
  direct_jobs = 5,
  indirect_jobs = 3,
  induced_jobs = 1
)

slo_roof_pv_om <- pv_om_capacity_and_jobs(
  county = "SLO", 
  technology = "Rooftop PV", 
  initial_capacity = 25, 
  final_capacity = 300, 
  direct_jobs = 10, 
  indirect_jobs = 5, 
  induced_jobs = 2
)

slo_roof_pv_const <- pv_const_capacity_and_jobs(
  county = "SLO",
  technology = "Rooftop PV",
  initial_capacity = 25,
  final_capacity = 300,
  direct_jobs = 10,
  indirect_jobs = 5,
  induced_jobs = 2
)

ventura_roof_pv_om <- pv_om_capacity_and_jobs(
  county = "V", 
  technology = "Rooftop PV", 
  initial_capacity = 29, 
  final_capacity = 150, 
  direct_jobs = 10, 
  indirect_jobs = 5, 
  induced_jobs = 2
)

ventura_roof_pv_const <- pv_const_capacity_and_jobs(
  county = "V",
  technology = "Rooftop PV",
  initial_capacity = 29,
  final_capacity = 150,
  direct_jobs = 10,
  indirect_jobs = 5,
  induced_jobs = 2
)



# Combine all counties and technologies
pv_all <- rbind(sb_utility_pv_om, sb_utility_pv_const, slo_utility_pv_om, slo_utility_pv_const, ventura_utility_pv_om, ventura_utility_pv_const,
                sb_roof_pv_om, sb_roof_pv_const, slo_roof_pv_om, slo_roof_pv_const, ventura_roof_pv_om, ventura_roof_pv_const)
```

NEED TO ADD IN ABMITION SCENARIOS! Make a new column with ambition = high or low.



```{r}
pv_all |>
    filter(type == "direct" &
           county == "V" &
           technology == "Utility PV") |>
    ggplot(aes(x = year, y = n_jobs, color = occupation)) +
    geom_line() +
    labs(title = "Construction vs O&M Utility Solar Jobs in Ventura County")
```











# OSW model
